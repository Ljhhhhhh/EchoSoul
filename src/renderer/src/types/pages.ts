/**
 * EchoSoul Page Types
 * TypeScript interfaces for page components and data structures
 */

// ========================================
// Report Related Types
// ========================================

export interface ReportData {
  id: string
  title: string
  type: 'daily' | 'weekly' | 'monthly' | 'custom'
  status: 'generating' | 'completed' | 'failed'
  createdAt: Date
  updatedAt: Date
  summary: string
  participants: string[]
  timeRange: {
    start: Date
    end: Date
  }
  insights: ReportInsight[]
  chapters: ReportChapter[]
  metadata: ReportMetadata
}

export interface ReportInsight {
  id: string
  type: 'communication_pattern' | 'emotion_analysis' | 'topic_trend' | 'relationship_dynamic'
  title: string
  description: string
  value: number | string
  trend: 'up' | 'down' | 'stable'
  importance: 'high' | 'medium' | 'low'
}

export interface ReportChapter {
  id: string
  title: string
  order: number
  content: string
  readingTime: number
  isRead: boolean
  subsections: ReportSubsection[]
}

export interface ReportSubsection {
  id: string
  title: string
  content: string
  order: number
}

export interface ReportMetadata {
  wordCount: number
  readingTime: number
  dataPoints: number
  analysisDepth: 'basic' | 'detailed' | 'comprehensive'
  aiModel: string
  version: string
}

// ========================================
// Navigation Types
// ========================================

export interface NavigationItem {
  id: string
  label: string
  icon: string
  path: string
  isActive?: boolean
  badge?: string | number
  children?: NavigationItem[]
}

export interface BreadcrumbItem {
  label: string
  path?: string
  isActive?: boolean
}

// ========================================
// Custom Report Types
// ========================================

export interface CustomReportConfig {
  timeRange: {
    start: Date
    end: Date
  }
  participants: ContactInfo[]
  analysisOptions: AnalysisOptions
  template?: ReportTemplate
}

export interface ContactInfo {
  id: string
  name: string
  avatar?: string
  messageCount: number
  isSelected: boolean
}

export interface AnalysisOptions {
  depth: 'basic' | 'detailed' | 'comprehensive'
  dimensions: AnalysisDimension[]
  includeEmotions: boolean
  includeTopics: boolean
  includeTimeline: boolean
  language: 'zh' | 'en'
}

export interface AnalysisDimension {
  id: string
  name: string
  description: string
  isEnabled: boolean
}

export interface ReportTemplate {
  id: string
  name: string
  description: string
  config: Partial<CustomReportConfig>
  isDefault?: boolean
}

// ========================================
// Wizard Step Types
// ========================================

export interface WizardStep {
  id: string
  title: string
  description: string
  order: number
  isCompleted: boolean
  isActive: boolean
  isValid: boolean
  component: string
}

export interface StepValidation {
  isValid: boolean
  errors: string[]
  warnings: string[]
}

// ========================================
// Settings Types
// ========================================

export interface SettingsSection {
  id: string
  title: string
  description: string
  icon: string
  path: string
  isActive?: boolean
}

export interface AIServiceConfig {
  provider: 'openai' | 'claude' | 'gemini' | 'openrouter' | 'deepseek'
  apiKey: string
  model: string
  baseUrl?: string
  isEnabled: boolean
  settings: {
    temperature: number
    maxTokens: number
    [key: string]: any
  }
}

export interface ReportPreferences {
  defaultAnalysisDepth: 'basic' | 'detailed' | 'comprehensive'
  autoGenerateDaily: boolean
  language: 'zh' | 'en'
  timezone: string
  dailyGenerationTime: string
  notificationSettings: NotificationSettings
}

export interface NotificationSettings {
  reportGenerated: boolean
  dailyReminder: boolean
  weeklyDigest: boolean
  errorAlerts: boolean
}

export interface DataManagementSettings {
  retentionPeriod: number // days
  autoCleanup: boolean
  exportFormat: 'json' | 'csv' | 'pdf'
  backupEnabled: boolean
  backupLocation: string
  reportRetentionPeriod: number
  cacheCleanupFrequency: 'daily' | 'weekly' | 'monthly' | 'manual'
  backupFrequency: 'daily' | 'weekly' | 'monthly'
  maxBackups: number
}

export interface SystemSettings {
  theme: 'light' | 'dark' | 'auto'
  language: 'zh' | 'en'
  startOnBoot: boolean
  minimizeToTray: boolean
  updateChannel: 'stable' | 'beta'
  logLevel: 'error' | 'warn' | 'info' | 'debug'
  zoomLevel: number
  enableAnimations: boolean
  startMinimized: boolean
  autoCheckUpdates: boolean
  autoDownloadUpdates: boolean
  memoryLimit: number
  hardwareAcceleration: boolean
  backgroundProcessing: boolean
  enableDevTools: boolean
}

// ========================================
// UI State Types
// ========================================

export interface LoadingState {
  isLoading: boolean
  message?: string
  progress?: number
}

export interface ErrorState {
  hasError: boolean
  message?: string
  code?: string
  canRetry?: boolean
}

export interface FilterOptions {
  dateRange?: {
    start: Date
    end: Date
  }
  reportType?: string[]
  status?: string[]
  participants?: string[]
  searchQuery?: string
}

export interface SortOptions {
  field: string
  direction: 'asc' | 'desc'
}

export interface PaginationOptions {
  page: number
  pageSize: number
  total: number
}

// ========================================
// Statistics Types
// ========================================

export interface QuickStats {
  totalReports: number
  thisWeekReports: number
  totalMessages: number
  activeContacts: number
  trends: {
    reports: number
    messages: number
    contacts: number
  }
}

export interface ChartData {
  labels: string[]
  datasets: ChartDataset[]
}

export interface ChartDataset {
  label: string
  data: number[]
  backgroundColor?: string | string[]
  borderColor?: string
  borderWidth?: number
}

// ========================================
// Additional Component Types
// ========================================

export interface QuickStatsItem {
  id: string
  label: string
  value: string | number
  icon: string
  trend?: {
    direction: 'up' | 'down'
    value: string
  }
}

export interface StorageStats {
  totalMessages: number
  totalContacts: number
  totalReports: number
  totalSize: number
}

export interface UsageStats {
  totalRequests: number
  avgResponseTime: number
  estimatedCost: number
  successRate: number
}
